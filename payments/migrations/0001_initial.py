# Generated by Django 5.1.4 on 2025-09-22 18:20

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        ('subscriptions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArtistSumUpAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField()),
                ('token_type', models.CharField(default='Bearer', max_length=20)),
                ('expires_at', models.DateTimeField()),
                ('scope', models.CharField(blank=True, default='', max_length=255)),
                ('artist', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sumup', to='payments.artist')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=64, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('amount_gbp', models.DecimalField(decimal_places=2, max_digits=10)),
                ('buyer_email', models.EmailField(max_length=254)),
                ('status', models.CharField(default='PENDING', max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='payments.artist')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gateway', models.CharField(default='sumup', max_length=20)),
                ('checkout_id', models.CharField(max_length=64, unique=True)),
                ('status', models.CharField(default='PENDING', max_length=20)),
                ('raw', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='payments.order')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_gbp', models.DecimalField(decimal_places=2, default=25.0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('citypay_token', models.CharField(blank=True, default='', max_length=200)),
                ('sumup_token', models.CharField(blank=True, default='', max_length=200)),
                ('next_charge_date', models.DateField(blank=True, null=True)),
                ('artist', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='payments.artist')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(db_index=True, default='GBP', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('successful', 'Successful'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('checkout_reference', models.CharField(blank=True, max_length=255)),
                ('sumup_transaction_code', models.CharField(blank=True, max_length=255)),
                ('sumup_response', models.JSONField(blank=True, null=True)),
                ('description', models.CharField(max_length=255)),
                ('failure_reason', models.TextField(blank=True)),
                ('attempts', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subscriptions.subscriptioninvoice')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_payments', to='subscriptions.subscription')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SumUpCheckout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('checkout_reference', models.CharField(help_text='Our reference sent to SumUp', max_length=255, unique=True)),
                ('sumup_checkout_id', models.CharField(blank=True, help_text='ID returned by SumUp', max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='GBP', max_length=3)),
                ('description', models.CharField(max_length=255)),
                ('merchant_code', models.CharField(help_text='SumUp merchant code', max_length=50)),
                ('return_url', models.URLField(help_text='Where to send status after payment')),
                ('redirect_url', models.URLField(blank=True, help_text='Where user goes after payment')),
                ('status', models.CharField(choices=[('created', 'Created'), ('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed'), ('expired', 'Expired')], db_index=True, default='created', max_length=20)),
                ('valid_until', models.DateTimeField(blank=True, help_text='Checkout expiration time from SumUp', null=True)),
                ('sumup_response', models.JSONField(blank=True, help_text='Full response from SumUp API', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('artist', models.ForeignKey(limit_choices_to={'user_type': 'artist'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artist_checkouts', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_checkouts', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkouts', to='orders.order')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SumUpTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('sumup_transaction_id', models.CharField(help_text='Transaction ID from SumUp', max_length=255, unique=True)),
                ('transaction_code', models.CharField(help_text='Transaction code from SumUp', max_length=255, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='GBP', max_length=3)),
                ('status', models.CharField(choices=[('successful', 'Successful'), ('cancelled', 'Cancelled'), ('failed', 'Failed'), ('pending', 'Pending')], max_length=20)),
                ('payment_type', models.CharField(choices=[('ecom', 'E-commerce'), ('recurring', 'Recurring'), ('moto', 'Mail/Phone Order')], default='ecom', max_length=20)),
                ('card_last_four', models.CharField(blank=True, max_length=4)),
                ('card_type', models.CharField(blank=True, max_length=20)),
                ('entry_mode', models.CharField(blank=True, max_length=50)),
                ('auth_code', models.CharField(blank=True, max_length=50)),
                ('platform_fee_percentage', models.DecimalField(decimal_places=2, default=Decimal('10.00'), max_digits=5)),
                ('platform_fee_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('artist_earnings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('vat_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('internal_id', models.BigIntegerField(blank=True, help_text='SumUp internal ID', null=True)),
                ('sumup_response', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(db_index=True, help_text='Transaction time from SumUp')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('checkout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='payments.sumupcheckout')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SumUpRefund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('successful', 'Successful'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('sumup_refund_id', models.CharField(blank=True, max_length=255)),
                ('sumup_response', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='payments.sumuptransaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArtistPayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payout_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='GBP', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('bank_account_name', models.CharField(max_length=100)),
                ('bank_account_number', models.CharField(max_length=20)),
                ('bank_sort_code', models.CharField(max_length=10)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('total_sales', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('artist', models.ForeignKey(limit_choices_to={'user_type': 'artist'}, on_delete=django.db.models.deletion.CASCADE, related_name='payouts', to=settings.AUTH_USER_MODEL)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payouts', to=settings.AUTH_USER_MODEL)),
                ('transactions', models.ManyToManyField(related_name='artist_payouts', to='payments.sumuptransaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
